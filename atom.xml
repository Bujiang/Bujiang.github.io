<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Bujiang's Blog]]></title>
  <link href="http://blog.bujiang.info/atom.xml" rel="self"/>
  <link href="http://blog.bujiang.info/"/>
  <updated>2014-10-26T15:24:34+08:00</updated>
  <id>http://blog.bujiang.info/</id>
  <author>
    <name><![CDATA[Yan Bujiang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Interesting Looping Methods in Ruby]]></title>
    <link href="http://blog.bujiang.info/blog/2014/10/26/interesting-looping-method-in-ruby/"/>
    <updated>2014-10-26T14:40:51+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/10/26/interesting-looping-method-in-ruby</id>
    <content type="html"><![CDATA[<p>In Python most the time I use for loop method to iterating list, like the code below</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">num</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'><span class="mi">0</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">6</span> <span class="mi">7</span> <span class="mi">8</span> <span class="mi">9</span>
</span></code></pre></td></tr></table></div></figure>


<p>But in Ruby there are more ways to play with</p>

<p>like Ptyhon one for loop</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">for</span> <span class="n">num</span> <span class="k">in</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">9</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">print</span> <span class="n">num</span><span class="p">,</span> <span class="s1">&#39; &#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ruby way</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">9</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">num</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">print</span> <span class="n">num</span><span class="p">,</span> <span class="s1">&#39; &#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>one line</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">9</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">num</span><span class="o">|</span> <span class="nb">print</span> <span class="n">num</span><span class="p">,</span> <span class="s1">&#39; &#39;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use SSHFS to Mount Remote File System]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/28/use-sshfs-to-mount-remote-file-system/"/>
    <updated>2014-08-28T22:19:11+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/28/use-sshfs-to-mount-remote-file-system</id>
    <content type="html"><![CDATA[<p>Be a lazy man sometimes may increase productivity a bit :)
Everytime update my server I need to scp or use FileZilla to upload my updated files or new files. But I want a method that upload files to server just like copy to another directory. After I do some search, I find a tool named SSHFS(SSH Filesystem) can do the job.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo sshfs *****@xxx.xxx.xxx.xxx:/usr/share/nginx/html ~/ServerHTML
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Challenge 6]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/25/python-challenge-6/"/>
    <updated>2014-08-25T20:12:12+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/25/python-challenge-6</id>
    <content type="html"><![CDATA[<p>Challenge 6. <a href="http://www.pythonchallenge.com/pc/def/channel.html">now there are pairs</a></p>

<p>Only one image, a zipper opened jeans, file in web page. As usual to check the source code.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span> <span class="c">&lt;!-- &lt;-- zip --&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>now there are pairs<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">href=</span><span class="s">&quot;../style.css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'><span class="nt">&lt;center&gt;</span>
</span><span class='line'><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">&quot;channel.jpg&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;br/&gt;</span>
</span><span class='line'><span class="c">&lt;!-- The following has nothing to do with the riddle itself. I just</span>
</span><span class='line'><span class="c">thought it would be the right point to offer you to donate to the</span>
</span><span class='line'><span class="c">Python Challenge project. Any amount will be greatly appreciated.</span>
</span><span class='line'>
</span><span class='line'><span class="c">-thesamet</span>
</span><span class='line'><span class="c">--&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;https://www.paypal.com/cgi-bin/webscr&quot;</span> <span class="na">method=</span><span class="s">&quot;post&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name=</span><span class="s">&quot;cmd&quot;</span> <span class="na">value=</span><span class="s">&quot;_xclick&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name=</span><span class="s">&quot;business&quot;</span> <span class="na">value=</span><span class="s">&quot;thesamet@gmail.com&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name=</span><span class="s">&quot;item_name&quot;</span> <span class="na">value=</span><span class="s">&quot;Python Challenge donations&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name=</span><span class="s">&quot;no_note&quot;</span> <span class="na">value=</span><span class="s">&quot;1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name=</span><span class="s">&quot;currency_code&quot;</span> <span class="na">value=</span><span class="s">&quot;USD&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name=</span><span class="s">&quot;tax&quot;</span> <span class="na">value=</span><span class="s">&quot;0&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name=</span><span class="s">&quot;bn&quot;</span> <span class="na">value=</span><span class="s">&quot;PP-DonationsBF&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;image&quot;</span> <span class="na">src=</span><span class="s">&quot;https://www.paypal.com/en_US/i/btn/x-click-but04.gif&quot;</span> <span class="na">border=</span><span class="s">&quot;0&quot;</span> <span class="na">name=</span><span class="s">&quot;submit&quot;</span> <span class="na">alt=</span><span class="s">&quot;Make payments with PayPal - it&#39;s fast, free and secure!&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;img</span> <span class="na">alt=</span><span class="s">&quot;&quot;</span> <span class="na">border=</span><span class="s">&quot;0&quot;</span> <span class="na">src=</span><span class="s">&quot;https://www.paypal.com/en_US/i/scr/pixel.gif&quot;</span> <span class="na">width=</span><span class="s">&quot;1&quot;</span> <span class="na">height=</span><span class="s">&quot;1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/form&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nothing special, the head, title, body, except an donate form. But the comment in the middle of markup code indicate only above it belongs to challenge 6. So let&rsquo;s analyze line by line. First line is opening html tag, second line is head tag, third line is a title tag with &ldquo;now&rdquo; ther are pairs inside, next line is css link, next line is closing head tag, next is body tag, next is a center img.
Now the only thing I have left is the comment after the html opening tag</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!-- &lt;-- zip --&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Maybe this challenge is not channel.html, but channel.zip? After change html to zip in browser, surprisingly find there do exist the zip file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/Desktop/channel ➤ cat readme.txt
</span><span class='line'>welcome to my zipped list.
</span><span class='line'>
</span><span class='line'>hint1: start from 90052
</span><span class='line'>hint2: answer is inside the zip
</span></code></pre></td></tr></table></div></figure>


<p>Unzip the file and find it has a readme.txt inside channel folder.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/Desktop/channel ➤ cat 90052.txt
</span><span class='line'>Next nothing is 94191~/Desktop/channel ➤ cat 94191.txt
</span><span class='line'>Next nothing is 85503~/Desktop/channel ➤
</span></code></pre></td></tr></table></div></figure>


<p>Like challeng 4 find the linked html, this time need to check the txt file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">re</span>
</span><span class='line'>
</span><span class='line'><span class="n">fileExtension</span> <span class="o">=</span> <span class="s">&#39;.txt&#39;</span>
</span><span class='line'><span class="n">firstFileName</span> <span class="o">=</span> <span class="s">&#39;90052&#39;</span>
</span><span class='line'><span class="n">digis</span> <span class="o">=</span> <span class="s">&quot;\d+&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">with</span> <span class="nb">open</span><span class="p">((</span><span class="n">firstFileName</span> <span class="o">+</span> <span class="n">fileExtension</span><span class="p">),</span> <span class="s">&#39;r&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>    <span class="n">data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">data</span>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'><span class="n">finding</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">digis</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">finding</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">0</span><span class="p">):</span>
</span><span class='line'>    <span class="n">nothingValue</span> <span class="o">=</span> <span class="n">finding</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="c">#In text file is like &quot;Next nothing is ***&quot;, name the variable nothingValue</span>
</span><span class='line'>    <span class="k">with</span> <span class="nb">open</span><span class="p">((</span><span class="n">nothingValue</span> <span class="o">+</span> <span class="n">fileExtension</span><span class="p">),</span> <span class="s">&#39;r&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>        <span class="n">data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'>        <span class="k">print</span> <span class="n">data</span>
</span><span class='line'>    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'>    <span class="n">finding</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">digis</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span> <span class="n">data</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/Desktop/channel ➤ python b.py
</span><span class='line'>Next nothing is 94191
</span><span class='line'>............
</span><span class='line'>Next nothing is 67824
</span><span class='line'>Next nothing is 46145
</span><span class='line'>Collect the comments.
</span></code></pre></td></tr></table></div></figure>


<p>I do a quick Google search for python file comment and find there is a zipfile module for python to work with archives. Use comment methond of ZipFile can get the comment.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">re</span><span class="o">,</span> <span class="nn">zipfile</span>
</span><span class='line'>
</span><span class='line'><span class="n">fileExtension</span> <span class="o">=</span> <span class="s">&#39;.txt&#39;</span>
</span><span class='line'><span class="n">firstFileName</span> <span class="o">=</span> <span class="s">&#39;90052&#39;</span>
</span><span class='line'><span class="n">digis</span> <span class="o">=</span> <span class="s">&quot;\d+&quot;</span>
</span><span class='line'><span class="n">commentList</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>
</span><span class='line'><span class="n">channelZipfile</span> <span class="o">=</span> <span class="n">zipfile</span><span class="o">.</span><span class="n">ZipFile</span><span class="p">(</span><span class="s">&quot;channel.zip&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">with</span> <span class="nb">open</span><span class="p">((</span><span class="n">firstFileName</span> <span class="o">+</span> <span class="n">fileExtension</span><span class="p">),</span> <span class="s">&#39;r&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>    <span class="n">data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">data</span>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'><span class="n">finding</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">digis</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'><span class="n">commentList</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">channelZipfile</span><span class="o">.</span><span class="n">getinfo</span><span class="p">((</span><span class="n">firstFileName</span> <span class="o">+</span> <span class="n">fileExtension</span><span class="p">))</span><span class="o">.</span><span class="n">comment</span><span class="p">)</span>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="k">while</span> <span class="n">finding</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">0</span><span class="p">):</span>
</span><span class='line'>        <span class="n">nothingValue</span> <span class="o">=</span> <span class="n">finding</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="c">#In text file is like &quot;Next nothing is ***&quot;, name the variable nothingValue</span>
</span><span class='line'>        <span class="n">commentList</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">channelZipfile</span><span class="o">.</span><span class="n">getinfo</span><span class="p">((</span><span class="n">nothingValue</span> <span class="o">+</span> <span class="n">fileExtension</span><span class="p">))</span><span class="o">.</span><span class="n">comment</span><span class="p">)</span>
</span><span class='line'>        <span class="k">with</span> <span class="nb">open</span><span class="p">((</span><span class="n">nothingValue</span> <span class="o">+</span> <span class="n">fileExtension</span><span class="p">),</span> <span class="s">&#39;r&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>            <span class="n">data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'>            <span class="k">print</span> <span class="n">data</span>
</span><span class='line'>        <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'>        <span class="n">finding</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">digis</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'><span class="k">except</span> <span class="ne">AttributeError</span><span class="p">:</span>
</span><span class='line'>    <span class="k">pass</span>
</span><span class='line'><span class="k">print</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">commentList</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Python/Python%20challenge%206/1.jpg"></p>

<p>Next challenge is <a href="http://www.pythonchallenge.com/pc/def/hockey.html">hockey</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Challenge 5]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/24/python-challenge-5/"/>
    <updated>2014-08-24T15:42:39+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/24/python-challenge-5</id>
    <content type="html"><![CDATA[<p>Challenge 5. <a href="http://www.pythonchallenge.com/pc/def/peak.html">peak hell</a></p>

<p>By fininsh loading challenge 5 webpage, it contains one picture and one phrase &ldquo;pronounce it&rdquo;.</p>

<p>As usual check the source code</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>peak hell<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">href=</span><span class="s">&quot;../style.css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'><span class="nt">&lt;center&gt;</span>
</span><span class='line'><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">&quot;peakhell.jpg&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;br&gt;&lt;font</span> <span class="na">color=</span><span class="s">&quot;#c0c0ff&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>pronounce it
</span><span class='line'><span class="nt">&lt;br&gt;</span>
</span><span class='line'><span class="nt">&lt;peakhell</span> <span class="na">src=</span><span class="s">&quot;banner.p&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span><span class='line'><span class="c">&lt;!-- peak hell sounds familiar ? --&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Besides the banner.p file founded, the comment &ldquo;peak hell sounds familiar&rdquo; bothers me. Just cannot figure out what it means.
Forget about the comment in html, I just load the file in python to see what inside.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">urllib2</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s">&quot;http://www.pythonchallenge.com/pc/def/banner.p&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">data</span>
</span><span class='line'><span class="s">&quot;(lp0</span><span class="se">\n</span><span class="s">(lp1</span><span class="se">\n</span><span class="s">(S&#39; &#39;</span><span class="se">\n</span><span class="s">p2</span><span class="se">\n</span><span class="s">I95</span><span class="se">\n</span><span class="s">tp3</span><span class="se">\n</span><span class="s">aa(lp4</span><span class="se">\n</span><span class="s">(g2</span><span class="se">\n</span><span class="s">I14</span><span class="se">\n</span><span class="s">tp5</span><span class="se">\n</span><span class="s">a(S&#39;#&#39;</span><span class="se">\n</span><span class="s">p6</span><span class="se">\n</span><span class="s">I5</span><span class="se">\n</span><span class="s">tp7</span><span class="se">\n</span><span class="s">a(g2</span><span class="se">\n</span><span class="s">I70</span><span class="se">\n</span><span class="s">tp8</span><span class="se">\n</span><span class="s">a(g6</span><span class="se">\n</span><span class="s">I5</span><span class="se">\n</span><span class="s">tp9</span><span class="se">\n</span><span class="s">a(g2</span><span class="se">\n</span><span class="s">I1</span><span class="se">\n</span><span class="s">tp10</span><span class="se">\n</span><span class="s">aa(lp11</span><span class="se">\n</span><span class="s">(g2</span><span class="se">\n</span><span class="s">I15</span><span class="se">\n</span><span class="s">tp12</span><span class="se">\n</span><span class="s">a(g6</span><span class="se">\n</span><span class="s">I4</span><span class="se">\n</span><span class="s">tp13</span><span class="se">\n</span><span class="s">a(g2</span><span class="se">\n</span><span class="s">I7</span>
</span><span class='line'><span class="o">.................</span>
</span></code></pre></td></tr></table></div></figure>


<p>It seems like seriers of data, then I try to import pickle package and have a look.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pickle</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="n">pickle</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">data</span>
</span><span class='line'><span class="p">[[(</span><span class="s">&#39; &#39;</span><span class="p">,</span> <span class="mi">95</span><span class="p">)],</span> <span class="p">[(</span><span class="s">&#39; &#39;</span><span class="p">,</span> <span class="mi">14</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;#&#39;</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39; &#39;</span><span class="p">,</span> <span class="mi">70</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;#&#39;</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39; &#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)],</span> <span class="p">[(</span><span class="s">&#39; &#39;</span><span class="p">,</span> <span class="mi">15</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;#&#39;</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39; &#39;</span><span class="p">,</span> <span class="mi">71</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;#&#39;</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span>
</span><span class='line'><span class="o">.................</span>
</span></code></pre></td></tr></table></div></figure>


<p>But it still like a mystery for me.</p>

<p>Beginning of data is (&lsquo;&rsquo;,95), last is (&lsquo;&rsquo;,95), second is (&lsquo;&rsquo;,14) but second last not same, not symmetric. Waite a minute, I find something interesting, inside the dictionary, there are sub dictionaries and inside the sub dict there are tuple(s). The numbers in each sub dictionaries sum together are equal to 95. e.g. the first tuple(&lsquo;&rsquo;,95) obvious is 95. the seconde dictonary contains five tuples (&lsquo;&rsquo;,14),(&lsquo;#&rsquo;, 5), (&lsquo; &rsquo;, 70), (&lsquo;#&rsquo;, 5), (&lsquo; &rsquo;, 1). 14+5+70+5+1=95
Perhaps the 95 is line width, if I printed out maybe will find something.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="nb">dict</span> <span class="ow">in</span> <span class="n">data</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>     <span class="k">for</span> <span class="nb">tuple</span> <span class="ow">in</span> <span class="nb">dict</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>             <span class="k">print</span> <span class="nb">tuple</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nb">tuple</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>The output remains unknow. Oh, I figure out the problem above code has, I don&rsquo;t have a complete second line.</p>

<p>asdf</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="nb">dict</span> <span class="ow">in</span> <span class="n">data</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">tuple</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="nb">tuple</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="nb">tuple</span> <span class="ow">in</span> <span class="nb">dict</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Python/Python%20challenge%205/1.jpg"></p>

<p>: ) Next challenge is <a href="http://www.pythonchallenge.com/pc/def/channel.html">channel</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Challenge 4]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/23/python-challenge-4/"/>
    <updated>2014-08-23T12:58:39+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/23/python-challenge-4</id>
    <content type="html"><![CDATA[<p>Challenge 4. <a href="http://www.pythonchallenge.com/pc/def/linkedlist.html">linkedlist</a></p>

<p>Open the resolved url in browser, it shows linkedlist.php.</p>

<p>Finish loading <a href="http://www.pythonchallenge.com/pc/def/linkedlist.php">http://www.pythonchallenge.com/pc/def/linkedlist.php</a> there only lefe one picture.
As before, I check the page source code and find a new link <a href="http://www.pythonchallenge.com/pc/def/linkedlist.php?nothing=12345">http://www.pythonchallenge.com/pc/def/linkedlist.php?nothing=12345</a>. I just try open the new url, and the page dispaly &ldquo;and the next nothing is 44827&rdquo;.
It seems need me to automate recursive open url by using python.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">urllib2</span><span class="o">,</span> <span class="nn">re</span>
</span><span class='line'>
</span><span class='line'><span class="n">url</span> <span class="o">=</span> <span class="s">&quot;http://www.pythonchallenge.com/pc/def/linkedlist.php?nothing=&quot;</span>
</span><span class='line'><span class="n">nothingValue</span> <span class="o">=</span> <span class="s">&quot;12345&quot;</span>
</span><span class='line'><span class="n">digis</span> <span class="o">=</span> <span class="s">&quot;\d+&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="n">url</span> <span class="o">+</span> <span class="n">nothingValue</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'><span class="k">print</span> <span class="n">data</span>
</span><span class='line'><span class="n">finding</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">digis</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">finding</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">0</span><span class="p">):</span>
</span><span class='line'>    <span class="n">nothingValue</span> <span class="o">=</span> <span class="n">finding</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">data</span> <span class="o">=</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="n">url</span> <span class="o">+</span> <span class="n">nothingValue</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">data</span>
</span><span class='line'>    <span class="n">finding</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">digis</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="n">data</span>
</span></code></pre></td></tr></table></div></figure>


<p>Above code will find the digitals in webpage and use the finding digitals to do a new request.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>.............
</span><span class='line'>and the next nothing is 29247
</span><span class='line'>and the next nothing is 13115
</span><span class='line'>and the next nothing is 23053
</span><span class='line'>and the next nothing is 3875
</span><span class='line'>and the next nothing is 16044
</span><span class='line'>Yes. Divide by two and keep going.
</span><span class='line'>Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
</span><span class='line'>  File <span class="s2">&quot;bu.py&quot;</span>, line 11, in &lt;module&gt;
</span><span class='line'>    <span class="k">while </span>finding.group<span class="o">(</span>0<span class="o">)</span>:
</span><span class='line'>AttributeError: <span class="s1">&#39;NoneType&#39;</span> object has no attribute <span class="s1">&#39;group&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>After run a while, the last printed line shows none digitals &ldquo;Divide by two and keep going&rdquo; By divide 16044 with 2 get 8022, then modify nothingValue in script then continue run.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>..............
</span><span class='line'>and the next nothing is 49574
</span><span class='line'>and the next nothing is 82682
</span><span class='line'>There maybe misleading numbers in the
</span><span class='line'>text. One example is 82683. Look only <span class="k">for </span>the next nothing and the next nothing is 63579
</span><span class='line'>You<span class="s1">&#39;ve been misleaded to here. Go to previous </span>
</span><span class='line'><span class="s1">one and check.</span>
</span><span class='line'><span class="s1">Traceback (most recent call last):</span>
</span><span class='line'><span class="s1">  File &quot;bu.py&quot;, line 11, in &lt;module&gt;</span>
</span><span class='line'><span class="s1">    while finding.group(0):</span>
</span><span class='line'><span class="s1">AttributeError: &#39;</span>NoneType<span class="s1">&#39; object has no attribute &#39;</span>group<span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>But still got some problem here, it tells &ldquo;One example is 82683&hellip;.&rdquo; I&rsquo;ve search print statement history but can&rsquo;t find it.
I continue modify the nothingValue to 63579 and re-run again.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>and the next nothing is 27709
</span><span class='line'>and the next nothing is 96791
</span><span class='line'>and the next nothing is 75635
</span><span class='line'>and the next nothing is 52899
</span><span class='line'>and the next nothing is 66831
</span><span class='line'>peak.html
</span><span class='line'>Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
</span><span class='line'>  File <span class="s2">&quot;bu.py&quot;</span>, line 11, in &lt;module&gt;
</span><span class='line'>    <span class="k">while </span>finding.group<span class="o">(</span>0<span class="o">)</span>:
</span><span class='line'>AttributeError: <span class="s1">&#39;NoneType&#39;</span> object has no attribute <span class="s1">&#39;group&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>
It seems OK here. I get peak.html  :)
So next challenge is <a href="http://www.pythonchallenge.com/pc/def/peak.html">http://www.pythonchallenge.com/pc/def/peak.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Challenge 3]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/20/python-challenge-3/"/>
    <updated>2014-08-20T00:10:44+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/20/python-challenge-3</id>
    <content type="html"><![CDATA[<p>Challenge 3. <a href="http://www.pythonchallenge.com/pc/def/equality.html">re</a></p>

<p>Like previous challenge, this challenge contains one picture and one pargraph.</p>

<blockquote><p>One small letter, surrounded by EXACTLY three big bodyguards on each of its sides.</p></blockquote>


<p>The title of challenge 3 page is re, maybe this is another hint telling me to use re package?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">urllib2</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s">&quot;http://www.pythonchallenge.com/pc/def/equality.html&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span> <span class="s">&quot;&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">&quot;[^A-Z][A-Z]{3}([a-z])[A-Z]{3}[^A-Z]&quot;</span><span class="p">,</span> <span class="n">data</span><span class="p">))</span>
</span><span class='line'><span class="n">linkedlist</span>
</span></code></pre></td></tr></table></div></figure>


<p>[^A-Z] matches any single character not in it</p>

<p>[A-Z]{3} matches three UPPERCASE characters</p>

<p>Next challenge is <a href="http://www.pythonchallenge.com/pc/def/linkedlist.html">linkedlist</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Challenge 2]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/17/python-challenge-2/"/>
    <updated>2014-08-17T14:47:57+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/17/python-challenge-2</id>
    <content type="html"><![CDATA[<p>Challenge 2. ocr</p>

<p>After finish load the <a href="http://www.pythonchallenge.com/pc/def/ocr.html">webpage</a>, there are a blurry picture and a paragraph</p>

<blockquote><p>recognize the characters. maybe they are in the book, <br/>but MAYBE they are in the page source.</p></blockquote>


<p>Perhaps the answer contain in the page source code, so I open terminal and in python interactive mode.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">urllib2</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">dir</span><span class="p">(</span><span class="n">urllib2</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="s">&#39;AbstractBasicAuthHandler&#39;</span><span class="p">,</span> <span class="s">&#39;AbstractDigestAuthHandler&#39;</span><span class="p">,</span> <span class="s">&#39;AbstractHTTPHandler&#39;</span><span class="p">,</span> <span class="s">&#39;BaseHandler&#39;</span><span class="p">,</span> <span class="s">&#39;CacheFTPHandler&#39;</span><span class="p">,</span> <span class="s">&#39;FTPHandler&#39;</span><span class="p">,</span> <span class="s">&#39;FileHandler&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPBasicAuthHandler&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPCookieProcessor&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPDefaultErrorHandler&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPDigestAuthHandler&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPError&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPErrorProcessor&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPHandler&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPPasswordMgr&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPPasswordMgrWithDefaultRealm&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPRedirectHandler&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPSHandler&#39;</span><span class="p">,</span> <span class="s">&#39;OpenerDirector&#39;</span><span class="p">,</span> <span class="s">&#39;ProxyBasicAuthHandler&#39;</span><span class="p">,</span> <span class="s">&#39;ProxyDigestAuthHandler&#39;</span><span class="p">,</span> <span class="s">&#39;ProxyHandler&#39;</span><span class="p">,</span> <span class="s">&#39;Request&#39;</span><span class="p">,</span> <span class="s">&#39;StringIO&#39;</span><span class="p">,</span> <span class="s">&#39;URLError&#39;</span><span class="p">,</span> <span class="s">&#39;UnknownHandler&#39;</span><span class="p">,</span> <span class="s">&#39;__builtins__&#39;</span><span class="p">,</span> <span class="s">&#39;__doc__&#39;</span><span class="p">,</span> <span class="s">&#39;__file__&#39;</span><span class="p">,</span> <span class="s">&#39;__name__&#39;</span><span class="p">,</span> <span class="s">&#39;__package__&#39;</span><span class="p">,</span> <span class="s">&#39;__version__&#39;</span><span class="p">,</span> <span class="s">&#39;_cut_port_re&#39;</span><span class="p">,</span> <span class="s">&#39;_opener&#39;</span><span class="p">,</span> <span class="s">&#39;_parse_proxy&#39;</span><span class="p">,</span> <span class="s">&#39;_safe_gethostbyname&#39;</span><span class="p">,</span> <span class="s">&#39;addinfourl&#39;</span><span class="p">,</span> <span class="s">&#39;base64&#39;</span><span class="p">,</span> <span class="s">&#39;bisect&#39;</span><span class="p">,</span> <span class="s">&#39;build_opener&#39;</span><span class="p">,</span> <span class="s">&#39;ftpwrapper&#39;</span><span class="p">,</span> <span class="s">&#39;getproxies&#39;</span><span class="p">,</span> <span class="s">&#39;hashlib&#39;</span><span class="p">,</span> <span class="s">&#39;httplib&#39;</span><span class="p">,</span> <span class="s">&#39;install_opener&#39;</span><span class="p">,</span> <span class="s">&#39;localhost&#39;</span><span class="p">,</span> <span class="s">&#39;mimetools&#39;</span><span class="p">,</span> <span class="s">&#39;os&#39;</span><span class="p">,</span> <span class="s">&#39;parse_http_list&#39;</span><span class="p">,</span> <span class="s">&#39;parse_keqv_list&#39;</span><span class="p">,</span> <span class="s">&#39;posixpath&#39;</span><span class="p">,</span> <span class="s">&#39;proxy_bypass&#39;</span><span class="p">,</span> <span class="s">&#39;quote&#39;</span><span class="p">,</span> <span class="s">&#39;random&#39;</span><span class="p">,</span> <span class="s">&#39;randombytes&#39;</span><span class="p">,</span> <span class="s">&#39;re&#39;</span><span class="p">,</span> <span class="s">&#39;request_host&#39;</span><span class="p">,</span> <span class="s">&#39;socket&#39;</span><span class="p">,</span> <span class="s">&#39;splitattr&#39;</span><span class="p">,</span> <span class="s">&#39;splithost&#39;</span><span class="p">,</span> <span class="s">&#39;splitpasswd&#39;</span><span class="p">,</span> <span class="s">&#39;splitport&#39;</span><span class="p">,</span> <span class="s">&#39;splittag&#39;</span><span class="p">,</span> <span class="s">&#39;splittype&#39;</span><span class="p">,</span> <span class="s">&#39;splituser&#39;</span><span class="p">,</span> <span class="s">&#39;splitvalue&#39;</span><span class="p">,</span> <span class="s">&#39;sys&#39;</span><span class="p">,</span> <span class="s">&#39;time&#39;</span><span class="p">,</span> <span class="s">&#39;toBytes&#39;</span><span class="p">,</span> <span class="s">&#39;unquote&#39;</span><span class="p">,</span> <span class="s">&#39;unwrap&#39;</span><span class="p">,</span> <span class="s">&#39;url2pathname&#39;</span><span class="p">,</span> <span class="s">&#39;urlopen&#39;</span><span class="p">,</span> <span class="s">&#39;urlparse&#39;</span><span class="p">,</span> <span class="s">&#39;warnings&#39;</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">page</span> <span class="o">=</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s">&quot;http://www.pythonchallenge.com/pc/def/ocr.html&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">dir</span><span class="p">(</span><span class="n">page</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="s">&#39;__doc__&#39;</span><span class="p">,</span> <span class="s">&#39;__init__&#39;</span><span class="p">,</span> <span class="s">&#39;__iter__&#39;</span><span class="p">,</span> <span class="s">&#39;__module__&#39;</span><span class="p">,</span> <span class="s">&#39;__repr__&#39;</span><span class="p">,</span> <span class="s">&#39;close&#39;</span><span class="p">,</span> <span class="s">&#39;code&#39;</span><span class="p">,</span> <span class="s">&#39;fileno&#39;</span><span class="p">,</span> <span class="s">&#39;fp&#39;</span><span class="p">,</span> <span class="s">&#39;getcode&#39;</span><span class="p">,</span> <span class="s">&#39;geturl&#39;</span><span class="p">,</span> <span class="s">&#39;headers&#39;</span><span class="p">,</span> <span class="s">&#39;info&#39;</span><span class="p">,</span> <span class="s">&#39;msg&#39;</span><span class="p">,</span> <span class="s">&#39;next&#39;</span><span class="p">,</span> <span class="s">&#39;read&#39;</span><span class="p">,</span> <span class="s">&#39;readline&#39;</span><span class="p">,</span> <span class="s">&#39;readlines&#39;</span><span class="p">,</span> <span class="s">&#39;url&#39;</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">page</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>urllib2 is python package that can open url (make request), but I can not remember exactly the function to access.</p>

<p>By use dir(urllib2) it shows has urlopen which is
needed one.</p>

<p>Ater I printed out the source code of the webpage, it mess up with a bunch of puctuation. It seems I am on the wrong track or this puctuations are some ciphertext? After a while, I recheck that paragraph it ask me to recognize the characters, so maybe it need the alphabets.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">charList</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">page</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>     <span class="k">if</span> <span class="n">i</span><span class="o">.</span><span class="n">isalpha</span><span class="p">():</span>
</span><span class='line'><span class="o">...</span>             <span class="n">charList</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">charList</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">charList</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">charList</span>
</span><span class='line'><span class="s">&#39;htmlheadtitleocrtitlelinkrelstylesheettypetextcsshrefstylecssheadbodycenterimgsrcocrjpgbrfontcolorcrecognizethecharactersmaybetheyareinthebookbrbutMAYBEtheyareinthepagesourcecenterbrbrbrfontsizecolorgoldGeneraltipsliUsethehintsTheyarehelpfulmostofthetimesliliInvestigatethedatagiventoyouliliAvoidlookingforspoilerslibrForumsahrefhttpwwwpythonchallengecomforumsPythonChallengeForumsareadbeforeyoupostbrIRCircfreenodenetpythonchallengebrbrToseethesolutionstothepreviouslevelreplacepcwithpcciegotohttp</span>
</span><span class='line'>
</span><span class='line'><span class="n">wwwpythonchallengecompccdefocrhtmlbodyhtmlfindrarecharactersinthemessbelowequality</span><span class="s">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>I find the tail of the whole string, it got &ldquo;python challenge&rdquo;, &ldquo;body html&rdquo;, &ldquo;find&rdquo;, it seems interesting.
I open the source code of webpage in browser</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!--</span>
</span><span class='line'><span class="c">find rare characters in the mess below:</span>
</span><span class='line'><span class="c">--&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!--</span>
</span><span class='line'><span class="c">Inside this comment mess up with a bunch of puctuation</span>
</span><span class='line'><span class="c">--&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Combine with &ldquo;findrarecharactersinthemessbelowequality&rdquo;, I got the answer &ldquo;equality&rdquo;</p>

<p>So next challenge is <a href="http://www.pythonchallenge.com/pc/def/equality.html">equality.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perl Day 1]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/15/perl-day-1/"/>
    <updated>2014-08-15T23:42:23+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/15/perl-day-1</id>
    <content type="html"><![CDATA[<p>I really like to use ack(pure Perl implemented)  which is a tool like grep but it optimized for search source code and filter by easy filter by file type, it cause me became interested in Perl.</p>

<p>For blog about Perl, I just want to record fragments of my learning process, it may not be suitable for others to read. Sorry for that :)</p>

<p>Perl, Practical Extraction and Report Language or Pathologically Eclectic Rubbish Lister.</p>

<p>For the tradition, first is &ldquo;Hello World!&rdquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#!/usr/bin/env perl</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;Hello Worlds!&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Perl need &ldquo;;&rdquo;.</p>

<p>61298040 and 61_298_040 are same</p>

<p>Octal: 0377</p>

<p>Hexadecimal: 0xff</p>

<p>Binary: 0b11111111</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">print</span> <span class="s">&quot;\lL&quot;</span> <span class="c1">#outputs small l</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;\LAPPLE&quot;</span> <span class="c1">#outputs apple    *: For capital use \u or \U</span>
</span></code></pre></td></tr></table></div></figure>


<p>Use . to connotate two strings like &ldquo;Hello&rdquo;.&ldquo; World!&rdquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="s">&quot;fred&quot;</span> <span class="n">x</span> <span class="mi">3</span> <span class="c1"># will outputs &quot;fredfredfred&quot;; </span>
</span><span class='line'><span class="s">&quot;fred&quot;</span> <span class="n">x</span> <span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span> <span class="c1"># outputs same</span>
</span><span class='line'><span class="mi">5</span> <span class="n">x</span> <span class="mi">4</span> <span class="c1"># outputs &quot;5555&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>scalar variable begin with $ sign</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nv">$Bujiang</span> <span class="o">=</span> <span class="s">&quot;Bujiang&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$Bujiang</span> <span class="o">.=</span> <span class="nv">$Bujiang</span><span class="p">;</span>  <span class="c1"># &quot;BujiangBujiang&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&lt;= is less or equal;</p>

<blockquote><p>= is grater or equal</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Challenge 0 - 1]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/15/python-challenge-0-1/"/>
    <updated>2014-08-15T18:40:45+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/15/python-challenge-0-1</id>
    <content type="html"><![CDATA[<p>Challenge 0. Warming up</p>

<p><a href="http://www.pythonchallenge.com/pc/def/0.html">http://www.pythonchallenge.com/pc/def/0.html</a></p>

<p>The webpage contain a picture and show 2 to the power of 38, beneath the picture has a
hint &ldquo;try to change the URL address.&rdquo;
This is a python challenge, so I open python in interactive mode, then calculate
the answer.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt;&gt;&gt; 2**38
</span><span class='line'>274877906944
</span></code></pre></td></tr></table></div></figure>


<p>replace the 0 to result then get the next stage URL is <a href="http://www.pythonchallenge.com/pc/def/274877906944.html">http://www.pythonchallenge.com/pc/def/274877906944.html</a></p>

<p>Challenge 1. What about making trans?</p>

<p>In webpage there have one picture and one paragraph. The picture show K->M O->Q E->G, and
the paragraph looks like have some meaning but for now I do not know it.
I guess it probably is a caesar cipher. So in terminal(shell) I type man ascii to do
a quick check to confirm my guess. &lsquo;K&rsquo;, &lsquo;O&rsquo;, &lsquo;E&rsquo; are all shift by two positions.
Then I write a shift function to decrypt it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">change</span><span class="p">(</span><span class="n">ciphertext</span><span class="p">):</span>
</span><span class='line'>    <span class="n">plaintext</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">ciphertext</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="s">&#39; &#39;</span><span class="p">:</span>
</span><span class='line'>            <span class="n">plaintext</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">elif</span> <span class="n">i</span> <span class="o">==</span> <span class="s">&#39;.&#39;</span><span class="p">:</span>
</span><span class='line'>            <span class="n">plaintext</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;.&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">elif</span> <span class="n">i</span> <span class="o">==</span> <span class="s">&#39;(&#39;</span><span class="p">:</span>
</span><span class='line'>            <span class="n">plaintext</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;(&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">elif</span> <span class="n">i</span> <span class="o">==</span> <span class="s">&#39;)&#39;</span><span class="p">:</span>
</span><span class='line'>            <span class="n">plaintext</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;)&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">elif</span> <span class="n">i</span> <span class="o">==</span> <span class="s">&#39;</span><span class="se">\&#39;</span><span class="s">&#39;</span><span class="p">:</span>
</span><span class='line'>            <span class="n">plaintext</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\&#39;</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="c"># ASCII lower letter decimal value for a to z is 97 to 122</span>
</span><span class='line'>            <span class="n">value</span> <span class="o">=</span> <span class="nb">ord</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">+</span> <span class="mi">2</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="n">value</span> <span class="o">&gt;</span> <span class="mi">122</span><span class="p">:</span>
</span><span class='line'>                <span class="n">value</span> <span class="o">=</span> <span class="n">value</span> <span class="o">-</span> <span class="mi">122</span> <span class="o">+</span> <span class="mi">96</span>
</span><span class='line'>                <span class="n">plaintext</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">chr</span><span class="p">(</span><span class="n">value</span><span class="p">))</span>
</span><span class='line'>            <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                <span class="n">plaintext</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">chr</span><span class="p">(</span><span class="nb">ord</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">+</span> <span class="mi">2</span><span class="p">))</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">plaintext</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">paragraph</span> <span class="o">=</span> <span class="s">&quot;g fmnc wms bgblr rpylqjyrc gr zw fylb. rfyrq ufyr amknsrcpq ypc dmp. bmgle gr gl zw fylb gq glcddgagclr ylb rfyr&#39;q ufw rfgq rcvr gq qm jmle. sqgle qrpgle.kyicrpylq() gq pcamkkclbcb. lmu ynnjw ml rfc spj.&quot;</span>
</span><span class='line'><span class="n">decodedParagraph</span> <span class="o">=</span> <span class="n">change</span><span class="p">(</span><span class="n">paragraph</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span> <span class="n">decodedParagraph</span>
</span></code></pre></td></tr></table></div></figure>


<p>The result is below</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>i hope you didnt translate it by hand.
</span><span class='line'>thats what computers are <span class="k">for</span>.
</span><span class='line'>doing it in by hand is inefficient and that<span class="err">&#39;</span>s why this text is so long.
</span><span class='line'>using string.maketrans<span class="o">()</span> is recommended.
</span><span class='line'>now apply on the url.
</span></code></pre></td></tr></table></div></figure>


<p>oops, it seems instead of doing lines of coding, it just need a string function.
This stage URL is <a href="http://www.pythonchallenge.com/pc/def/map.html">http://www.pythonchallenge.com/pc/def/map.html</a>
map need to change to ocr, so get next stage URL
<a href="http://www.pythonchallenge.com/pc/def/ocr.html">http://www.pythonchallenge.com/pc/def/ocr.html</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ciphertext</span> <span class="o">=</span> <span class="s">&quot;map&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">plaintext</span> <span class="o">=</span> <span class="n">string</span><span class="o">.</span><span class="n">maketrans</span><span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span><span class="p">,</span> <span class="s">&quot;cdefghijklmnopqrstuvwxyzab&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="n">ciphertext</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="n">plaintext</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Generate Alphabet Permutation in Python]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/12/generatre-alphabet-permutation-in-python/"/>
    <updated>2014-08-12T22:38:04+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/12/generatre-alphabet-permutation-in-python</id>
    <content type="html"><![CDATA[<p>Yesterday I&rsquo;ve find a loophole in my friends website, the API for mobile side registration does not have any human verification functions.
I decide to generate alphabet permutation list for user name and register fake users.</p>

<p>In python standard library have functions for iterators for efficient looping which name is itertools. The itertools have permutation generators.</p>

<p>The permutation function needs two arguments, one is iterable, another one is length like if the iterable is &ldquo;ABC&rdquo; and length is 2 then (A,B) (A,C) (B,A) (B,C) (C,A) (C,B) are results for this functions.</p>

<figure class='code'><figcaption><span>Generate permutation</span><a href='https://docs.python.org/2/library/itertools.html#itertools.permutations'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">itertools</span>
</span><span class='line'><span class="n">iterable</span> <span class="o">=</span> <span class="s">&#39;ABC&#39;</span>
</span><span class='line'><span class="n">length</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class='line'><span class="n">permutation</span> <span class="o">=</span> <span class="n">itertools</span><span class="o">.</span><span class="n">permutations</span><span class="p">(</span><span class="n">iterable</span><span class="p">,</span> <span class="n">length</span><span class="p">)</span>
</span><span class='line'><span class="n">permutation</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">permuation</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>After generate, inside the python list are tuples not string for user name. We need join alphabet within tuple together. Like (A,B) become &lsquo;AB&rsquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">nameList</span> <span class="o">=</span> <span class="p">[]</span>                        <span class="c">#Create a empty list</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">permutation</span><span class="p">:</span>
</span><span class='line'>    <span class="n">nameList</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>      <span class="c">#Join alphabet together and append in namList</span>
</span></code></pre></td></tr></table></div></figure>


<p>The user name list are done, next is register user by use API. That API for registration use form-urlencoded. For simplicity, I decide just use curl construct special POST request.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">TYPE</span> <span class="o">=</span> <span class="s">&quot;&#39;Content-Type:application/x-www-form-urlencoded&#39;&quot;</span>
</span><span class='line'><span class="n">DEVICE</span> <span class="o">=</span> <span class="s">&quot; -d &#39;device_type=2&amp;user_name=&quot;</span>
</span><span class='line'><span class="n">EMAIL</span> <span class="o">=</span> <span class="s">&quot;&amp;email=&quot;</span>
</span><span class='line'><span class="n">EMAILTAIL</span> <span class="o">=</span> <span class="s">&quot;%40bujiang.info&amp;password=12345&amp;device_token=&#39;&quot;</span>
</span><span class='line'><span class="n">URL</span> <span class="o">=</span> <span class="s">&quot; http://***********.com/*******api/index.php/v1/dp_auth/signup&quot;</span>
</span><span class='line'><span class="n">COMMAND</span> <span class="o">=</span> <span class="s">&quot;curl -s -X POST -H &quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">execmd</span><span class="p">():</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">nameList</span><span class="p">:</span>
</span><span class='line'>        <span class="n">name</span> <span class="o">=</span> <span class="n">nameList</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>    <span class="c">#Poped name use for username</span>
</span><span class='line'>        <span class="n">cmd</span> <span class="o">=</span> <span class="n">COMMAND</span> <span class="o">+</span> <span class="n">TYPE</span> <span class="o">+</span> <span class="n">DEVICE</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="n">EMAIL</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="n">EMAILTAIL</span> <span class="o">+</span> <span class="n">URL</span>    <span class="c">#Construct command for different username registration</span>
</span><span class='line'>        <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span>    <span class="c">#Execute command in shell </span>
</span></code></pre></td></tr></table></div></figure>


<p>The code is modified from original code, original code use multithread for concurrent post request. Those asterisk in code URL for privacy reason.
Another loophole for this registration API is password in plaintext.</p>

<p>*: All test actions are under my friend authorization</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mount Disk From Shell(Terminal) in Mac]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/11/mount-disk-from-shell-terminal-in-mac/"/>
    <updated>2014-08-11T15:31:00+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/11/mount-disk-from-shell-terminal-in-mac</id>
    <content type="html"><![CDATA[<p>Before we mount disk or drive, we need to know all the connected first. There is a program called diskutil that can manipulate the structure of local disks.</p>

<p>Type diskutil list in shell, the program will list all the
connected disks.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>diskutil list
</span></code></pre></td></tr></table></div></figure>


<p>The output will look like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/dev/disk0
</span><span class='line'>   <span class="c">#:                       TYPE NAME                    SIZE       IDENTIFIER</span>
</span><span class='line'>   0:      GUID_partition_scheme                        *250.1 GB   disk0
</span><span class='line'>   1:                        EFI EFI                     209.7 MB   disk0s1
</span><span class='line'>   2:                  Apple_HFS Mac OS                  249.2 GB   disk0s2
</span><span class='line'>   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
</span><span class='line'>/dev/disk2
</span><span class='line'>   <span class="c">#:                       TYPE NAME                    SIZE       IDENTIFIER</span>
</span><span class='line'>   0:        CD_partition_scheme                        *124.0 MB   disk2
</span><span class='line'>   1:       CD_ROM_Mode_2_Form_1 A20110738               108.0 MB   disk2s0
</span></code></pre></td></tr></table></div></figure>


<p>Suppose will need mount the CD inside optical drive, we can type diskutil mountDisk /dev/disk2</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>diskutil mountDisk /dev/disk2
</span></code></pre></td></tr></table></div></figure>


<p>After successful mount the disk, the output will look something like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Volume<span class="o">(</span>s<span class="o">)</span> mounted successfully
</span></code></pre></td></tr></table></div></figure>


<p>For mounting disk the argument use in diskutil is mountDisk but normal extenal hard drive just use mount.</p>

<p>Unmounting disk or drive use unmountDisk or unmount for argument</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>diskutil mount /dev/disk3
</span><span class='line'>diskutil unmount /dev/disk3
</span><span class='line'>disktuil mountDisk /dev/disk2
</span><span class='line'>disktuil unmountDisk /dev/disk2
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ptyhon Printing]]></title>
    <link href="http://blog.bujiang.info/blog/2014/07/23/ptyhon-printing/"/>
    <updated>2014-07-23T00:02:09+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/07/23/ptyhon-printing</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>Fun printing</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="p">[</span><span class="s">&quot;/&quot;</span><span class="p">,</span> <span class="s">&quot;-&quot;</span><span class="p">,</span> <span class="s">&quot;|&quot;</span><span class="p">,</span> <span class="s">&quot;</span><span class="se">\\</span><span class="s">&quot;</span><span class="p">,</span> <span class="s">&quot;|&quot;</span><span class="p">,</span> <span class="s">&quot;-&quot;</span><span class="p">]:</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;Loading [</span><span class="si">%s</span><span class="s">]</span><span class="se">\r\b</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">i</span><span class="p">,</span>
</span></code></pre></td></tr></table></div></figure>


<iframe width="" height="" src="http://www.youtube.com/embed/q_XmtWG1E7c " frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[谷歌彩蛋]]></title>
    <link href="http://blog.bujiang.info/blog/2014/01/11/gu-ge-cai-dan/"/>
    <updated>2014-01-11T23:50:20+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/01/11/gu-ge-cai-dan</id>
    <content type="html"><![CDATA[<p>谷歌(Google) 搜索页面上其实有挺多好玩的彩蛋(Easter egg)</p>

<p>(1) do a barrel roll</p>

<p>在谷歌搜索页面输入 do a barrel roll 按enter(return)后 页面就会乖乖的做翻滚（需要在Chrome里面执行）</p>

<p><video width='640' height='320' preload='none' controls poster='https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Google%20Easter%20egg/Screen%20Shot%202014-01-12%20at%2012.07.01%20AM.png'><source src='https://dl.dropboxusercontent.com/u/23849021/Blog/Video/Google%20Easter%20egg/My%20Movie.mp4' type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'></video></p>

<p>(2) atari breakout</p>

<p>在谷歌图片搜索页面输入 atari breakout 按enter(return)后 页面就会变成打砖块的小游戏</p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Google%20Easter%20egg/Screen%20Shot%202014-01-11%20at%2010.42.07%20PM.jpg"></p>

<p>(3) google in 1998</p>

<p>输入google in 1998 按enter(return)后 就“穿越”到1998年了 谷歌页面中的图标就回到98年的beta版了</p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Google%20Easter%20egg/Screen%20Shot%202014-01-12%20at%2012.17.50%20AM.jpg"></p>

<p>(4) zerg rush</p>

<p>喜欢星际争霸（星海争霸,StarCraft) 应该会挺熟悉zerg rush 的含义的 我的理解是潮水般压倒性的攻击 :)</p>

<p>在谷歌搜索页面中输入 zerg rush 按enter(return)后  会有一个小游戏出现 需要用鼠标点击那些攻击过来的小圆环 来保护搜索结果 当搜索结果全部被小圆环击碎后游戏就结束了 页面的右侧有APM计</p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Google%20Easter%20egg/Screen%20Shot%202014-01-12%20at%2012.30.07%20AM.jpg"></p>

<p>Happy Googleing</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VIM Tips 2]]></title>
    <link href="http://blog.bujiang.info/blog/2014/01/09/vim-tips-2/"/>
    <updated>2014-01-09T21:07:09+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/01/09/vim-tips-2</id>
    <content type="html"><![CDATA[<p>VIM除了可以使用Ctrl和a或者x键来进行数字的加减 在Insert Mode的时候其实还能很方便的进行四则运</p>

<p>例如在Insert Mode下 已经输入了</p>

<p>买了5个苹果 每个苹果是1.34元 总共是：</p>

<p>在一般的文本编辑器中只有两种选择 1.心算 2.计算器</p>

<p>但是在VIM中可以按Ctrl和r 然后按＝ 然后输入5 * 1.34 在按enter(return)键就可以得到结果了</p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Vim/Tips/2/Screen%20Shot%202014-01-09%20at%209.16.51%20PM.jpg"> 6.7</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VIM Tips 1]]></title>
    <link href="http://blog.bujiang.info/blog/2014/01/09/vim-tips-1/"/>
    <updated>2014-01-09T00:50:24+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/01/09/vim-tips-1</id>
    <content type="html"><![CDATA[<p>平时使用VIM都在使用plugin带来的方便 其实VIM在不借助外部plugin也是非常强大的</p>

<p>今天在用录入数据的时候想起来了VIM有个很方便的功能就是能快速的进行数字的加减运算</p>

<p>只需要把光标移动到数字上 按Ctrl和a 就会把数字加一  当然也可以利用到VIM count功能</p>

<p>在按Ctrl键之前 先输入数字</p>

<p>例如 光标现在停在数字1上   按5键然后按Ctrl再按a  数字1就被加一五次变成6了</p>

<p>相对应于加   按Ctrl和x 会进行减一运算</p>

<p>不过有一点需要注意  数字如果是007 这是光标如果停在数字7上 按Ctrl和a  并不会出现008而是010</p>

<p>这是因为VIM识别007为八进制的数字 所以加一就变成010</p>

<p>如果想保持十进制 可以在Normal mode 下 输入 :set nrformats=   即可 当然如果想一劳永逸的话 就添加到vimrc文件里面</p>

<p>更改回007识别成八进制 只要输入 :set nrformats=octal 就行了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coder 出错了]]></title>
    <link href="http://blog.bujiang.info/blog/2013/12/17/coder-chu-cuo-liao/"/>
    <updated>2013-12-17T00:32:00+08:00</updated>
    <id>http://blog.bujiang.info/blog/2013/12/17/coder-chu-cuo-liao</id>
    <content type="html"><![CDATA[<p>一直因为忙于Project 而挺久没有玩Pi了 Pi就一直勤劳的帮我“挖矿”</p>

<p>现在Project结束了 空闲些了 可以玩玩Pi了</p>

<p>前段时间有看Tweet 发现Google有出一个Project叫Coder 用于Pi的</p>

<p>可以把Pi迅速变成Web server</p>

<p>刚想到就立马Google了下 找到了Coder的页面 根据页面提示把安装包给下载了下来</p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Raspberry%20Pi/Coder/Screen%20Shot%202013-12-17%20at%2012.44.09%20AM.jpg"></p>

<p>跟Raspbian很类似 把SD卡格式化下 然后插入Pi中就可以工作了</p>

<p>根据步骤一步步来 没一会就出错了</p>

<p>想了想可能是SD卡开了读写保护了， 把SD卡弹了出来， 发现黄色的读写保护按钮“高高”的停在unlock状态</p>

<p>无奈的把它拨动到lock状态又拨回来</p>

<p>再次运行Coder 不一会又出错了</p>

<p>没办法 只好通过Disk Utility重新Format了下SD卡 再试 结果还是出错</p>

<p>也许是Disk Utility的问题吧 然后拿出了“大杀器” SDFormater</p>

<p>本以为没问题了 结果还是报错</p>

<p>在万般无奈的情况下只好在Terminal中运行Coder的安装程序</p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Raspberry%20Pi/Coder/Screen%20Shot%202013-12-17%20at%201.02.37%20AM.jpg"></p>

<p>发现原来是因为Coder在执行脚本的时候文件夹名字的空格没有处理好所以一直报错</p>

<p>如上图，  我的路径是/Volumes/Bu/Raspberry Pi/
而执行脚本的时候指向的却是/Volumes/Bu/Raspberry</p>

<p>想到了以前Gmail也出现过一段时间的crash 最终是因为一个“／” 没想到Coder会因为一个“space”导致报错</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node.js 试玩]]></title>
    <link href="http://blog.bujiang.info/blog/2013/12/15/node-dot-js-shi-wan/"/>
    <updated>2013-12-15T08:47:00+08:00</updated>
    <id>http://blog.bujiang.info/blog/2013/12/15/node-dot-js-shi-wan</id>
    <content type="html"><![CDATA[<p>一般提到JavaScript都会想到网页前端， 通常JavaScript都是在浏览器中执行的</p>

<p>而Node.js不同与一般JavaScript它是在服务器端执行（在V8引擎的虚拟机上）</p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Node.js/%E8%AF%95%E7%8E%A9/Screen%20Shot%202013-12-15%20at%208.56.25%20AM.jpg"></p>

<p>如上图 如果不带任何参数的执行node 就像Python一样会出现一个互动的界面 在这里可以执行JavaScript</p>

<p>介绍完了 开始coding第一个小程序 hello.js</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>setTimeout(function() {
</span><span class='line'>    console.log("world");
</span><span class='line'>}, 2000)
</span><span class='line'>    console.log("hello");</span></code></pre></td></tr></table></div></figure>


<p></p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Node.js/%E8%AF%95%E7%8E%A9/Screen%20Shot%202013-12-15%20at%209.11.24%20AM.jpg"></p>

<p>执行hello.js  会先出现hello 在等待了2秒钟后会出现world</p>

<p>＊： 把上面code中setTimeout 改成 setInterval  再执行hello.js 就会每间隔2秒显示一次world</p>

<p>hello world 完了 现在来个简易的web server</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>web-server.js
</span><span class='line'>var http = require('http');
</span><span class='line'>
</span><span class='line'>var s = http.createServer(function(req, res) {
</span><span class='line'>    res.writeHead(200, { 'content-type': 'text/plain' });
</span><span class='line'>    res.end("hello world\n");
</span><span class='line'>}); 
</span><span class='line'>s.listen(8000);</span></code></pre></td></tr></table></div></figure>


<p>上面的code 先让http载入http模块  然后创建server变量s  让s返回200 ok 以及 hello world给浏览器 在浏览器端输入ip地址加上8000端口就可以看到hello world了</p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Node.js/%E8%AF%95%E7%8E%A9/Screen%20Shot%202013-12-15%20at%209.31.15%20AM.jpg"></p>

<p>当然也可以通过curl来看header</p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Node.js/%E8%AF%95%E7%8E%A9/Screen%20Shot%202013-12-15%20at%209.36.23%20AM.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VIM 插件]]></title>
    <link href="http://blog.bujiang.info/blog/2013/12/10/vim-cha-jian/"/>
    <updated>2013-12-10T16:26:00+08:00</updated>
    <id>http://blog.bujiang.info/blog/2013/12/10/vim-cha-jian</id>
    <content type="html"><![CDATA[<p>在有了这些插件以后让VIM的使用可以变成一件很快乐而且高效率</p>

<p>VIM插件的“管家”</p>

<p><a href="https://github.com/gmarik/vundle">Vundle</a></p>

<p>Vundle 本身也属于VIM的一个插件 但是使用它可以很方便的管理其它VIM插件 例如在Github上发现好的VIM插件后 在vimrc里面添加一行代码后 Vundle就能帮我们安装需要的这个插件了 对于VIM新手来说实在是方便</p>

<p>安装步骤：</p>

<p>1.在Terminal中使用Git来下载在Github上的Vundle</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle</span></code></pre></td></tr></table></div></figure>


<p>2.通过编辑器打开vim设置文件</p>

<p>vim ~/.vimrc</p>

<p>在设置文件的最上端添加一下代码</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set nocompatible
</span><span class='line'>filetype off
</span><span class='line'>set rtp+=~/.vim/bundle/vundle/
</span><span class='line'>call vundle#rc()
</span><span class='line'>" let Vundle manage Vundle
</span><span class='line'>" required! 
</span><span class='line'>Bundle 'gmarik/vundle'
</span><span class='line'>"new plugin add below
</span><span class='line'>filetype plugin indent on</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>以后安装新的VIM插件就只需要打开VIM设置文件 中添加 Bundle &lsquo;插件在Github上的名字&rsquo;</p>

<p>添加好后 保存退出 再打开VIM 输入 :BundleInstall</p>

<p>Vundle就会下载插件了</p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Vim/Vim%20plugin/Screen%20Shot%202013-12-10%20at%205.09.43%20PM.jpg"></p>

<p>一些我常用的插件都是通过vundle来安装的</p>

<p>EasyMotion 可以很方便的让光标移动到想要去的位置</p>

<p>默认按键有</p>

<p>\j <br/>
\k <br/>
\l<br/>
\h</p>

<p>NERDTree 可以是文件夹和文件呈现成树状图 方便查找打开 默认使用vim的移动按键 和 o来打开文件或文件夹</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Day 4]]></title>
    <link href="http://blog.bujiang.info/blog/2013/12/01/git-day-4/"/>
    <updated>2013-12-01T23:19:00+08:00</updated>
    <id>http://blog.bujiang.info/blog/2013/12/01/git-day-4</id>
    <content type="html"><![CDATA[<p>当有别人分享git链接 或者参与相同的项目可以用git clone来把remote repo保存到本地</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://ddiang@bitbucket.org/ddiang/multi-drop-use-rs232-asm-cg3002-project.git ddiang</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>ddiang 是保存在本地的目录，如果留空 就会使用repo上的目录multi drop……</p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Git/Day%204/Git-Day-4-1.jpg"></p>

<p>克隆到本地后可以新建一个自己的分支（branch）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git branch diang</span></code></pre></td></tr></table></div></figure>


<p></p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Git/Day%204/Git-Day-4-2.jpg"></p>

<p>在创建新的分支后可以看到 有diang和master两个分支</p>

<p>要切换到分支diang 需要执行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git checkout diang</span></code></pre></td></tr></table></div></figure>


<p></p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Git/Day%204/Git-Day-4-3.jpg"></p>

<p>由上图可以发现 当我切换到新的分支diang下面</p>

<p>使用touch命令创建了一个空的diang.txt文件  以及commit了</p>

<p>再当我切换回master分支后 是看不到diang.txt文件的  每个分支间不会相互影响</p>

<p>当在新的分支下完成想要做的后可以通过merge命令 把两个分支合在一起</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git merge diang</span></code></pre></td></tr></table></div></figure>


<p></p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Git/Day%204/Git-Day-4-4.jpg"></p>

<p>如上图 在合并在一起后 再用branch -d 删除分支</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Day 3]]></title>
    <link href="http://blog.bujiang.info/blog/2013/11/30/git-day-3/"/>
    <updated>2013-11-30T21:24:00+08:00</updated>
    <id>http://blog.bujiang.info/blog/2013/11/30/git-day-3</id>
    <content type="html"><![CDATA[<p>Git是一个分布式版本控制（distributed revision control）系统，除了在本地保留commit和repo</p>

<p>当然也可以储存在不同的地方 例如最常用的GitHub和Bitbucket了</p>

<p>虽然Git是分布式版本控制但是在Git中并没有访问控制（access control)</p>

<p>如果需要访问控制需要借由第三方来实现 如网站（在Github或Bitbucket上可以设置不同帐户的访问权限）或者软件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote add origin https://ddiang@bitbucket.org/ddiang/multi-drop-use-rs232-asm-cg3002-project.git</span></code></pre></td></tr></table></div></figure>


<p>上面的code 就添加了一个新的remote repo， add是添加新的 origin是remote端的名字 后面的https是地址</p>

<p>想要查询有添加过哪些remote可以通过git remote -v</p>

<p><img src="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Git/Day%203/Git-Day-3-1.jpg"></p>

<p>本地的文件修改好了也commit了</p>

<p>现在需要把本地的push到remote repo上</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git push -u origin master</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>-u 参数是用来记住 remote的origin</p>

<p>下次push的时候就直接push到origin上</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote rm origin
</span><span class='line'>git pull</span></code></pre></td></tr></table></div></figure>


<p>remote rm 用来移除</p>

<p>pull 把remote repo上做的更改给拿到本地来</p>
]]></content>
  </entry>
  
</feed>
