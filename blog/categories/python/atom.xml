<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | Bujiang's Blog]]></title>
  <link href="http://blog.bujiang.info/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://blog.bujiang.info/"/>
  <updated>2014-08-27T23:46:12+08:00</updated>
  <id>http://blog.bujiang.info/</id>
  <author>
    <name><![CDATA[Yan Bujiang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Python Challenge 6]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/25/python-challenge-6/"/>
    <updated>2014-08-25T20:12:12+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/25/python-challenge-6</id>
    <content type="html"><![CDATA[<p>Challenge 6. <a href="http://www.pythonchallenge.com/pc/def/channel.html">now there are pairs</a></p>

<p>Only one image, a zipper opened jeans, file in web page. As usual to check the source code.
``` html
<html> <!-- <-- zip -->
<head>
  <title>now there are pairs</title>
  <link rel="stylesheet" type="text/css" href="../style.css">
</head>
<body></p>

<p><center>
<img src="channel.jpg">
<br/>
&lt;!&mdash; The following has nothing to do with the riddle itself. I just
thought it would be the right point to offer you to donate to the
Python Challenge project. Any amount will be greatly appreciated.</p>

<p>-thesamet
&mdash;></p>

<p><form action="https://www.paypal.com/cgi-bin/webscr" method="post"></p>

<pre><code>&lt;input type="hidden" name="cmd" value="_xclick"&gt;
&lt;input type="hidden" name="business" value="thesamet@gmail.com"&gt;
&lt;input type="hidden" name="item_name" value="Python Challenge donations"&gt;
&lt;input type="hidden" name="no_note" value="1"&gt;
&lt;input type="hidden" name="currency_code" value="USD"&gt;
&lt;input type="hidden" name="tax" value="0"&gt;
&lt;input type="hidden" name="bn" value="PP-DonationsBF"&gt;
&lt;input type="image" src="https://www.paypal.com/en_US/i/btn/x-click-but04.gif" border="0" name="submit" alt="Make payments with PayPal - it's fast, free and secure!"&gt;
&lt;img alt="" border="0" src="https://www.paypal.com/en_US/i/scr/pixel.gif" width="1" height="1"&gt;
</code></pre>

<p></form></p>

<p></body>
</html>
```</p>

<p>Nothing special, the head, title, body, except an donate form. But the comment in the middle of markup code indicate only above it belongs to challenge 6. So let&rsquo;s analyze line by line. First line is opening html tag, second line is head tag, third line is a title tag with &ldquo;now&rdquo; ther are pairs inside, next line is css link, next line is closing head tag, next is body tag, next is a center img.
Now the only thing I have left is the comment after the html opening tag</p>

<p><code>html
&lt;!-- &lt;-- zip --&gt;
</code>
Maybe this challenge is not channel.html, but channel.zip? After change html to zip in browser, surprisingly find there do exist the zip file.</p>

<p>``` bash
~/Desktop/channel ➤ cat readme.txt
welcome to my zipped list.</p>

<p>hint1: start from 90052
hint2: answer is inside the zip
<code>
Unzip the file and find it has a readme.txt inside channel folder.
</code> bash
~/Desktop/channel ➤ cat 90052.txt
Next nothing is 94191~/Desktop/channel ➤ cat 94191.txt
Next nothing is 85503~/Desktop/channel ➤
<code>
Like challeng 4 find the linked html, this time need to check the txt file.
</code> python
import re</p>

<p>fileExtension = &lsquo;.txt&rsquo;
firstFileName = &lsquo;90052&rsquo;
digis = &ldquo;\d+&rdquo;</p>

<p>with open((firstFileName + fileExtension), &lsquo;r&rsquo;) as f:</p>

<pre><code>data = f.read()
print data
</code></pre>

<p>f.close()
finding = re.search(digis, data)</p>

<p>while finding.group(0):</p>

<pre><code>nothingValue = finding.group(0)
#In text file is like "Next nothing is ***", name the variable nothingValue
with open((nothingValue + fileExtension), 'r') as f:
    data = f.read()
    print data
f.close()
finding = re.search(digis, data)
</code></pre>

<p>print data
<code>
</code> bash
~/Desktop/channel ➤ python b.py
Next nothing is 94191
&hellip;&hellip;&hellip;&hellip;
Next nothing is 67824
Next nothing is 46145
Collect the comments.
<code>
I do a quick Google search for python file comment and find there is a zipfile module for python to work with archives. Use comment methond of ZipFile can get the comment.
</code> python
import re, zipfile</p>

<p>fileExtension = &lsquo;.txt&rsquo;
firstFileName = &lsquo;90052&rsquo;
digis = &ldquo;\d+&rdquo;
commentList = []</p>

<p>channelZipfile = zipfile.ZipFile(&ldquo;channel.zip&rdquo;)</p>

<p>with open((firstFileName + fileExtension), &lsquo;r&rsquo;) as f:</p>

<pre><code>data = f.read()
print data
</code></pre>

<p>f.close()
finding = re.search(digis, data)
commentList.append(channelZipfile.getinfo((firstFileName + fileExtension)).comment)
try:</p>

<pre><code>while finding.group(0):
    nothingValue = finding.group(0)
    #In text file is like "Next nothing is ***", name the variable nothingValue
    commentList.append(channelZipfile.getinfo((nothingValue + fileExtension)).comment)
    with open((nothingValue + fileExtension), 'r') as f:
        data = f.read()
        print data
    f.close()
    finding = re.search(digis, data)
</code></pre>

<p>except AttributeError:</p>

<pre><code>pass
</code></pre>

<p>print &lsquo;&rsquo;.join(commentList)
```
<img class="<a" src="href="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Python/Python%20challenge%206/1.jpg">https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Python/Python%20challenge%206/1.jpg</a>"></p>

<p>Next challenge is <a href="http://www.pythonchallenge.com/pc/def/hockey.html">hockey</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Challenge 5]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/24/python-challenge-5/"/>
    <updated>2014-08-24T15:42:39+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/24/python-challenge-5</id>
    <content type="html"><![CDATA[<p>Challenge 5. <a href="http://www.pythonchallenge.com/pc/def/peak.html">peak hell</a></p>

<p>By fininsh loading challenge 5 webpage, it contains one picture and one phrase &ldquo;pronounce it&rdquo;.</p>

<p>As usual check the source code
``` html
<html>
<head>
  <title>peak hell</title>
  <link rel="stylesheet" type="text/css" href="../style.css">
</head>
<body></p>

<p><center>
<img src="peakhell.jpg"/>
<br><font color="#c0c0ff">
pronounce it
<br>
<peakhell src="banner.p"/>
</body>
</html>
<!-- peak hell sounds familiar ? -->
<code>
Besides the banner.p file founded, the comment "peak hell sounds familiar" bothers me. Just cannot figure out what it means.
Forget about the comment in html, I just load the file in python to see what inside.
</code> python</p>

<blockquote><blockquote><blockquote><p>import urllib2
data = urllib2.urlopen(&ldquo;<a href="http://www.pythonchallenge.com/pc/def/banner.p">http://www.pythonchallenge.com/pc/def/banner.p</a>&rdquo;).read()
data
&ldquo;(lp0\n(lp1\n(S' &lsquo;\np2\nI95\ntp3\naa(lp4\n(g2\nI14\ntp5\na(S&rsquo;#&lsquo;\np6\nI5\ntp7\na(g2\nI70\ntp8\na(g6\nI5\ntp9\na(g2\nI1\ntp10\naa(lp11\n(g2\nI15\ntp12\na(g6\nI4\ntp13\na(g2\nI7
&hellip;&hellip;&hellip;&hellip;&hellip;..
<code>
It seems like seriers of data, then I try to import pickle package and have a look.
</code> python
import pickle
data = pickle.loads(data)
data
[[(&rsquo; &lsquo;, 95)], [(&rsquo; &lsquo;, 14), (&rsquo;#&lsquo;, 5), (&rsquo; &lsquo;, 70), (&rsquo;#&lsquo;, 5), (&rsquo; &lsquo;, 1)], [(&rsquo; &lsquo;, 15), (&rsquo;#&lsquo;, 4), (&rsquo; &lsquo;, 71), (&rsquo;#&lsquo;, 4),
&hellip;&hellip;&hellip;&hellip;&hellip;..
```
But it still like a mystery for me.</p></blockquote></blockquote></blockquote>

<p>Beginning of data is (&lsquo;&rsquo;,95), last is (&lsquo;&rsquo;,95), second is (&lsquo;&rsquo;,14) but second last not same, not symmetric. Waite a minute, I find something interesting, inside the dictionary, there are sub dictionaries and inside the sub dict there are tuple(s). The numbers in each sub dictionaries sum together are equal to 95. e.g. the first tuple(&lsquo;&rsquo;,95) obvious is 95. the seconde dictonary contains five tuples (&lsquo;&rsquo;,14),(&lsquo;#&rsquo;, 5), (&lsquo; &rsquo;, 70), (&lsquo;#&rsquo;, 5), (&lsquo; &rsquo;, 1). 14+5+70+5+1=95
Perhaps the 95 is line width, if I printed out maybe will find something.
``` python</p>

<blockquote><blockquote><blockquote><p>for dict in data:
&hellip;     for tuple in dict:
&hellip;             print tuple[0]*tuple[1]
```
The output remains unknow. Oh, I figure out the problem above code has, I don&rsquo;t have a complete second line.</p></blockquote></blockquote></blockquote>

<p>asdf</p>

<p>``` python</p>

<blockquote><blockquote><blockquote><p>for dict in data:
&hellip;     print &lsquo;&rsquo;.join(tuple[0] * tuple[1] for tuple in dict)
```
<img class="<a" src="href="https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Python/Python%20challenge%205/1.jpg">https://dl.dropboxusercontent.com/u/23849021/Blog/Picture/Python/Python%20challenge%205/1.jpg</a>"></p></blockquote></blockquote></blockquote>

<p>: ) Next challenge is <a href="http://www.pythonchallenge.com/pc/def/channel.html">channel</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Challenge 4]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/23/python-challenge-4/"/>
    <updated>2014-08-23T12:58:39+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/23/python-challenge-4</id>
    <content type="html"><![CDATA[<p>Challenge 4. <a href="http://www.pythonchallenge.com/pc/def/linkedlist.html">linkedlist</a></p>

<p>Open the resolved url in browser, it shows linkedlist.php.</p>

<p>Finish loading <a href="http://www.pythonchallenge.com/pc/def/linkedlist.php">http://www.pythonchallenge.com/pc/def/linkedlist.php</a> there only lefe one picture.
As before, I check the page source code and find a new link <a href="http://www.pythonchallenge.com/pc/def/linkedlist.php?nothing=12345">http://www.pythonchallenge.com/pc/def/linkedlist.php?nothing=12345</a>. I just try open the new url, and the page dispaly &ldquo;and the next nothing is 44827&rdquo;.
It seems need me to automate recursive open url by using python.</p>

<p>``` python
import urllib2, re</p>

<p>url = &ldquo;<a href="http://www.pythonchallenge.com/pc/def/linkedlist.php?nothing=">http://www.pythonchallenge.com/pc/def/linkedlist.php?nothing=</a>&rdquo;
nothingValue = &ldquo;12345&rdquo;
digis = &ldquo;\d+&rdquo;</p>

<p>data = urllib2.urlopen(url + nothingValue).read()
print data
finding = re.search(digis, data)</p>

<p>while finding.group(0):</p>

<pre><code>nothingValue = finding.group(0)
data = urllib2.urlopen(url + nothingValue).read()
print data
finding = re.search(digis, data)
</code></pre>

<p>print data
```</p>

<p>Above code will find the digitals in webpage and use the finding digitals to do a new request.</p>

<p>``` bash
&hellip;&hellip;&hellip;&hellip;.
and the next nothing is 29247
and the next nothing is 13115
and the next nothing is 23053
and the next nothing is 3875
and the next nothing is 16044
Yes. Divide by two and keep going.
Traceback (most recent call last):
  File &ldquo;bu.py&rdquo;, line 11, in <module></p>

<pre><code>while finding.group(0):
</code></pre>

<p>AttributeError: &lsquo;NoneType&rsquo; object has no attribute &lsquo;group&rsquo;
<code>
After run a while, the last printed line shows none digitals "Divide by two and keep going" By divide 16044 with 2 get 8022, then modify nothingValue in script then continue run.
</code> bash
&hellip;&hellip;&hellip;&hellip;..
and the next nothing is 49574
and the next nothing is 82682
There maybe misleading numbers in the
text. One example is 82683. Look only for the next nothing and the next nothing is 63579
You&rsquo;ve been misleaded to here. Go to previous
one and check.
Traceback (most recent call last):
  File &ldquo;bu.py&rdquo;, line 11, in <module></p>

<pre><code>while finding.group(0):
</code></pre>

<p>AttributeError: &lsquo;NoneType&rsquo; object has no attribute &lsquo;group&rsquo;
<code>
But still got some problem here, it tells "One example is 82683...." I've search print statement history but can't find it.
I continue modify the nothingValue to 63579 and re-run again.
</code> bash
and the next nothing is 27709
and the next nothing is 96791
and the next nothing is 75635
and the next nothing is 52899
and the next nothing is 66831
peak.html
Traceback (most recent call last):
  File &ldquo;bu.py&rdquo;, line 11, in <module></p>

<pre><code>while finding.group(0):
</code></pre>

<p>AttributeError: &lsquo;NoneType&rsquo; object has no attribute &lsquo;group&rsquo;
```
It seems OK here. I get peak.html  :)
So next challenge is <a href="http://www.pythonchallenge.com/pc/def/peak.html">http://www.pythonchallenge.com/pc/def/peak.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Challenge 3]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/20/python-challenge-3/"/>
    <updated>2014-08-20T00:10:44+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/20/python-challenge-3</id>
    <content type="html"><![CDATA[<p>Challenge 3. <a href="http://www.pythonchallenge.com/pc/def/equality.html">re</a></p>

<p>Like previous challenge, this challenge contains one picture and one pargraph.
<blockquote><p>One small letter, surrounded by EXACTLY three big bodyguards on each of its sides.</p></blockquote></p>

<p>The title of challenge 3 page is re, maybe this is another hint telling me to use re package?
``` python</p>

<blockquote><blockquote><blockquote><p>import urllib2
data = urllib2.urlopen(&ldquo;<a href="http://www.pythonchallenge.com/pc/def/equality.html">http://www.pythonchallenge.com/pc/def/equality.html</a>&rdquo;)
data = data.read()
print &ldquo;&rdquo;.join(re.findall(&ldquo;[^A-Z][A-Z]{3}([a-z])[A-Z]{3}[^A-Z]&rdquo;, data))
linkedlist
```</p></blockquote></blockquote></blockquote>

<p>[^A-Z] matches any single character not in it</p>

<p>[A-Z]{3} matches three UPPERCASE characters</p>

<p>Next challenge is <a href="http://www.pythonchallenge.com/pc/def/linkedlist.html">linkedlist</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Challenge 2]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/17/python-challenge-2/"/>
    <updated>2014-08-17T14:47:57+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/17/python-challenge-2</id>
    <content type="html"><![CDATA[<p>Challenge 2. ocr</p>

<p>After finish load the <a href="http://www.pythonchallenge.com/pc/def/ocr.html">webpage</a>, there are a blurry picture and a paragraph
<blockquote><p>recognize the characters. maybe they are in the book,<br/>but MAYBE they are in the page source.</p></blockquote></p>

<p>Perhaps the answer contain in the page source code, so I open terminal and in python interactive mode.
``` python</p>

<blockquote><blockquote><blockquote><p>import urllib2
dir(urllib2)
[&lsquo;AbstractBasicAuthHandler&rsquo;, &lsquo;AbstractDigestAuthHandler&rsquo;, &lsquo;AbstractHTTPHandler&rsquo;, &lsquo;BaseHandler&rsquo;, &lsquo;CacheFTPHandler&rsquo;, &lsquo;FTPHandler&rsquo;, &lsquo;FileHandler&rsquo;, &lsquo;HTTPBasicAuthHandler&rsquo;, &lsquo;HTTPCookieProcessor&rsquo;, &lsquo;HTTPDefaultErrorHandler&rsquo;, &lsquo;HTTPDigestAuthHandler&rsquo;, &lsquo;HTTPError&rsquo;, &lsquo;HTTPErrorProcessor&rsquo;, &lsquo;HTTPHandler&rsquo;, &lsquo;HTTPPasswordMgr&rsquo;, &lsquo;HTTPPasswordMgrWithDefaultRealm&rsquo;, &lsquo;HTTPRedirectHandler&rsquo;, &lsquo;HTTPSHandler&rsquo;, &lsquo;OpenerDirector&rsquo;, &lsquo;ProxyBasicAuthHandler&rsquo;, &lsquo;ProxyDigestAuthHandler&rsquo;, &lsquo;ProxyHandler&rsquo;, &lsquo;Request&rsquo;, &lsquo;StringIO&rsquo;, &lsquo;URLError&rsquo;, &lsquo;UnknownHandler&rsquo;, &lsquo;<strong>builtins</strong>&rsquo;, &lsquo;<strong>doc</strong>&rsquo;, &lsquo;<strong>file</strong>&rsquo;, &lsquo;<strong>name</strong>&rsquo;, &lsquo;<strong>package</strong>&rsquo;, &lsquo;<strong>version</strong>&rsquo;, &lsquo;<em>cut_port_re&rsquo;, &lsquo;</em>opener&rsquo;, &lsquo;<em>parse_proxy&rsquo;, &lsquo;</em>safe_gethostbyname&rsquo;, &lsquo;addinfourl&rsquo;, &lsquo;base64&rsquo;, &lsquo;bisect&rsquo;, &lsquo;build_opener&rsquo;, &lsquo;ftpwrapper&rsquo;, &lsquo;getproxies&rsquo;, &lsquo;hashlib&rsquo;, &lsquo;httplib&rsquo;, &lsquo;install_opener&rsquo;, &lsquo;localhost&rsquo;, &lsquo;mimetools&rsquo;, &lsquo;os&rsquo;, &lsquo;parse_http_list&rsquo;, &lsquo;parse_keqv_list&rsquo;, &lsquo;posixpath&rsquo;, &lsquo;proxy_bypass&rsquo;, &lsquo;quote&rsquo;, &lsquo;random&rsquo;, &lsquo;randombytes&rsquo;, &rsquo;re', &lsquo;request_host&rsquo;, &lsquo;socket&rsquo;, &lsquo;splitattr&rsquo;, &lsquo;splithost&rsquo;, &lsquo;splitpasswd&rsquo;, &lsquo;splitport&rsquo;, &lsquo;splittag&rsquo;, &lsquo;splittype&rsquo;, &lsquo;splituser&rsquo;, &lsquo;splitvalue&rsquo;, &lsquo;sys&rsquo;, &lsquo;time&rsquo;, &lsquo;toBytes&rsquo;, &lsquo;unquote&rsquo;, &lsquo;unwrap&rsquo;, &lsquo;url2pathname&rsquo;, &lsquo;urlopen&rsquo;, &lsquo;urlparse&rsquo;, &lsquo;warnings&rsquo;]
page = urllib2.urlopen(&ldquo;<a href="http://www.pythonchallenge.com/pc/def/ocr.html">http://www.pythonchallenge.com/pc/def/ocr.html</a>&rdquo;)
dir(page)
[&lsquo;<strong>doc</strong>&rsquo;, &lsquo;<strong>init</strong>&rsquo;, &lsquo;<strong>iter</strong>&rsquo;, &lsquo;<strong>module</strong>&rsquo;, &lsquo;<strong>repr</strong>&rsquo;, &lsquo;close&rsquo;, &lsquo;code&rsquo;, &lsquo;fileno&rsquo;, &lsquo;fp&rsquo;, &lsquo;getcode&rsquo;, &lsquo;geturl&rsquo;, &lsquo;headers&rsquo;, &lsquo;info&rsquo;, &lsquo;msg&rsquo;, &lsquo;next&rsquo;, &lsquo;read&rsquo;, &lsquo;readline&rsquo;, &lsquo;readlines&rsquo;, &lsquo;url&rsquo;]
page = page.read()
```
urllib2 is python package that can open url (make request), but I can not remember exactly the function to access.</p></blockquote></blockquote></blockquote>

<p>By use dir(urllib2) it shows has urlopen which is
needed one.</p>

<p>Ater I printed out the source code of the webpage, it mess up with a bunch of puctuation. It seems I am on the wrong track or this puctuations are some ciphertext? After a while, I recheck that paragraph it ask me to recognize the characters, so maybe it need the alphabets.
``` python</p>

<blockquote><blockquote><blockquote><p>charList = []
for i in page:
&hellip;     if i.isalpha():
&hellip;             charList.append(i)
&hellip;
charList = &lsquo;&rsquo;.join(charList)
charList
&lsquo;htmlheadtitleocrtitlelinkrelstylesheettypetextcsshrefstylecssheadbodycenterimgsrcocrjpgbrfontcolorcrecognizethecharactersmaybetheyareinthebookbrbutMAYBEtheyareinthepagesourcecenterbrbrbrfontsizecolorgoldGeneraltipsliUsethehintsTheyarehelpfulmostofthetimesliliInvestigatethedatagiventoyouliliAvoidlookingforspoilerslibrForumsahrefhttpwwwpythonchallengecomforumsPythonChallengeForumsareadbeforeyoupostbrIRCircfreenodenetpythonchallengebrbrToseethesolutionstothepreviouslevelreplacepcwithpcciegotohttp</p></blockquote></blockquote></blockquote>

<p>wwwpythonchallengecompccdefocrhtmlbodyhtmlfindrarecharactersinthemessbelowequality'
```</p>

<p>I find the tail of the whole string, it got &ldquo;python challenge&rdquo;, &ldquo;body html&rdquo;, &ldquo;find&rdquo;, it seems interesting.
I open the source code of webpage in browser
``` html</p>

<!--
find rare characters in the mess below:
-->




<!--
Inside this comment mess up with a bunch of puctuation
-->


<p>```</p>

<p>Combine with &ldquo;findrarecharactersinthemessbelowequality&rdquo;, I got the answer &ldquo;equality&rdquo;</p>

<p>So next challenge is <a href="http://www.pythonchallenge.com/pc/def/equality.html">equality.html</a></p>
]]></content>
  </entry>
  
</feed>
