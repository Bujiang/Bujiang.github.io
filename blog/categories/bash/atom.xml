<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bash | Bujiang's Blog]]></title>
  <link href="http://blog.bujiang.info/blog/categories/bash/atom.xml" rel="self"/>
  <link href="http://blog.bujiang.info/"/>
  <updated>2014-08-13T00:30:46+08:00</updated>
  <id>http://blog.bujiang.info/</id>
  <author>
    <name><![CDATA[Yan Bujiang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Generate Alphabet Permutation in Python]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/12/generatre-alphabet-permutation-in-python/"/>
    <updated>2014-08-12T22:38:04+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/12/generatre-alphabet-permutation-in-python</id>
    <content type="html"><![CDATA[<p>Yesterday I&rsquo;ve find a loophole in my friends website, the API for mobile side registration does not have any human verification functions.
I decide to generate alphabet permutation list for user name and register fake users.</p>

<p>In python standard library have functions for iterators for efficient looping which name is itertools. The itertools have permutation generators.</p>

<p>The permutation function needs two arguments, one is iterable, another one is length like if the iterable is &ldquo;ABC&rdquo; and length is 2 then (A,B) (A,C) (B,A) (B,C) (C,A) (C,B) are results for this functions.
<code>python Generate permutation https://docs.python.org/2/library/itertools.html#itertools.permutations
import itertools
iterable = 'ABC'
length = 2
permutation = itertools.permutations(iterable, length)
permutation = list(permuation)
</code></p>

<p>After generate, inside the python list are tuples not string for user name. We need join alphabet within tuple together. Like (A,B) become &lsquo;AB&rsquo;</p>

<p>``` python
nameList = []                        #Create a empty list
for i in permutation:</p>

<pre><code>nameList.append(''.join(i))      #Join alphabet together and append in namList
</code></pre>

<p>```
The user name list are done, next is register user by use API. That API for registration use form-urlencoded. For simplicity, I decide just use curl construct special POST request.</p>

<p>``` python
TYPE = &ldquo;&lsquo;Content-Type:application/x-www-form-urlencoded&rsquo;&rdquo;
DEVICE = &ldquo; -d &lsquo;device_type=2&amp;user_name=&rdquo;
EMAIL = &ldquo;&amp;email=&rdquo;
EMAILTAIL = &ldquo;%40bujiang.info&amp;password=12345&amp;device_token=&rsquo;&rdquo;
URL = &ldquo; <a href="http://***********.com/*******api/index.php/v1/dp_auth/signup">http://***********.com/*******api/index.php/v1/dp_auth/signup</a>&rdquo;
COMMAND = &ldquo;curl -s -X POST -H &rdquo;</p>

<p>def execmd():</p>

<pre><code>if nameList:
    name = nameList.pop()    #Poped name use for username
    cmd = COMMAND + TYPE + DEVICE + name + EMAIL + name + EMAILTAIL + URL    #Construct command for different username registration
    os.system(cmd)    #Execute command in shell 
</code></pre>

<p>```</p>

<p>The code is modified from original code, original code use multithread for concurrent post request. Those asterisk in code URL for privacy reason.
Another loophole for this registration API is password in plaintext.</p>

<p>*: All test actions are under my friend authorization</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mount Disk From Shell(Terminal) in Mac]]></title>
    <link href="http://blog.bujiang.info/blog/2014/08/11/mount-disk-from-shell-terminal-in-mac/"/>
    <updated>2014-08-11T15:31:00+08:00</updated>
    <id>http://blog.bujiang.info/blog/2014/08/11/mount-disk-from-shell-terminal-in-mac</id>
    <content type="html"><![CDATA[<p>Before we mount disk or drive, we need to know all the connected first. There is a program called diskutil that can manipulate the structure of local disks.</p>

<p>Type diskutil list in shell, the program will list all the
connected disks.</p>

<p><code>bash
diskutil list
</code></p>

<p>The output will look like</p>

<p><code>bash
/dev/disk0
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:      GUID_partition_scheme                        *250.1 GB   disk0
   1:                        EFI EFI                     209.7 MB   disk0s1
   2:                  Apple_HFS Mac OS                  249.2 GB   disk0s2
   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
/dev/disk2
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:        CD_partition_scheme                        *124.0 MB   disk2
   1:       CD_ROM_Mode_2_Form_1 A20110738               108.0 MB   disk2s0
</code></p>

<p>Suppose will need mount the CD inside optical drive, we can type diskutil mountDisk /dev/disk2</p>

<p><code>bash
diskutil mountDisk /dev/disk2
</code></p>

<p>After successful mount the disk, the output will look something like</p>

<p><code>bash
Volume(s) mounted successfully
</code></p>

<p>For mounting disk the argument use in diskutil is mountDisk but normal extenal hard drive just use mount.</p>

<p>Unmounting disk or drive use unmountDisk or unmount for argument</p>

<p><code>bash
diskutil mount /dev/disk3
diskutil unmount /dev/disk3
disktuil mountDisk /dev/disk2
disktuil unmountDisk /dev/disk2
</code></p>
]]></content>
  </entry>
  
</feed>
